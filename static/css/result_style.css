@charset "utf-8";
.header {
    background: white;
}

.header .container {
    height: 80px;
    display: flex;
    align-items: center;
    max-width: none;
    border-bottom: 3px solid black;
}

.area_logo_header {
    display: flex;
    align-items: center;
}

.area_logo_header .copy {
    display: block;
    padding-bottom: 7px;
}

.area_logo_header .logo {
    display: block;
    margin-left: 20px;
}

.area_logo_header .logo img {
    margin-top: 6px;
    margin-bottom: 10px;
    height: 64px;
    width: 64px;
    filter: grayscale(100%) contrast(120%);
}

.area_logo_header .copy {
    font: 300 12px/1em "fantasy", fantasy;
    margin: 0 0 0 30px;
    font-family: cursive;
}

.area_nav_header {
    display: flex;
    margin-left: auto;
    flex: auto;
    min-width: 10px;
}

.global {
    display: flex;
	/* background-color: skyblue; */
	justify-content: center;
    align-items: center;
    height: 86vh;
}

/* backボタン配置についてのcss */
.back {
    width: 20px;
    height: 10px;
    position: relative;
    top: -62px;
    left: -150px;
}

/* nextボタン配置についてのcss */
.next {
    width: 20px;
    height: 10px;
    position: relative;
    top: -62px;
    right: -67px;
}



/* ナビゲーションバー・アイコン */
.list_nav_icon_header {
    display: flex;
    align-items: center;
    list-style: none;
    padding-left: 20px;
    margin-left: auto;
    margin-right: 30px;
    border-left: 1px solid black;

}

.list_nav_icon_header > li + li {
    margin-left: 10px;
}
.list_nav_icon_header a {
    display: block;
    width:30px;
    height: 30px;
    background-size: contain;
    background-position: center center;
    background-position: no-repeat;
}

.list_nav_icon_header {
    list-style: none;
}

.list_nav_icon_header .search a {
    background: url(../static/cmn/img/ico/ico_search.svg);
}

.list_nav_icon_header .favorite a {
    background: url(../static/cmn/img/ico/ico_heart.svg);
}

.list_nav_icon_header .home a {
    background: url(../static/cmn/img/ico/ico_home.svg);
}


/* リストナビ */
.list_nav_header {
    padding-left: 90px;
    display: flex;
    align-items: center;
    margin: 0 auto;
}

.tab {
    margin:15px;
}

.tab a {
    font-size: 30px;
    color:inherit;
    text-decoration: none;
}

.list_nav_header a {
    text-decoration: none;
    color: black;
    font-family: fantasy;
    font-size: 25px;
    position: relative;
    display: inline-block;
}

.list_nav_header  li {
    list-style: none;

}

.list_nav_header a::after {
    position: absolute;
    left: 0;
    content: '';
    background: black;
    transform: scale(0, 1);
    transform-origin: center top; /*変形（アンダーラインの伸長）の原点がaタグ（各メニュー）の右端*/
    transition: transform 0.3s;   /*変形の時間*/
    width: 100%;
    height: 1.5px;
    bottom: -4px;
    }

.list_nav_header a:hover::after {
    transform: scale(1, 1); /*ホバー後、x軸方向に1（相対値）伸長*/
    }

.list_nav_header a:hover {
    color: black;
}

.list_nav_header > li + li {
    margin-left: 40px;
}

/* header終了 */

/* tabについてのcss */
*, *::before, *::after {
	box-sizing: border-box;
}

a {
    color: black;
	/* color: #333; */
	text-decoration: none;
}

a.active {
    color: #000000;
}

a :hover {
    color: #000000;
}

main {
	width: 100%;
	max-width: 1000px;
	margin: 30px auto;
	padding: 20px;
}

.tabs {
	/* 横並びにする */
	display: flex;
	/* 均等に並べる */
	justify-content: space-between;
}

.tabs li {
	/* タブの幅を24%にする */
	width: 24%;
    border: none;
    border-top-right-radius: 10px;
	border-top-left-radius: 10px;
    font-weight: bolder;
}

.tabs li a  {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 40px;
	background-color: white;
	/* タブのボタンの上部分を丸っぽくする */
	border-top-right-radius: 10px;
	border-top-left-radius: 10px;
    position: relative;
    text-decoration: none;
}

.tabs li a::after {
    position: absolute;
    left: 0;
    content: '';
    background: black;
    transform: scale(0, 1);
    transform-origin: center top; /*変形（アンダーラインの伸長）の原点がaタグ（各メニュー）の右端*/
    transition: transform 0.3s;   /*変形の時間*/
    width: 100%;
    height: 1.5px;
    bottom: -4px;
}

.tabs li a:hover::after {
    transform: scale(0.63, 1); /*ホバー後、x軸方向に1（相対値）伸長*/
}

.tabs li {
    font-family: "Yu Gothic", "游ゴシック", YuGothic, "游ゴシック体";
}

.contents li {
	padding: 20px;
	display: none;
}

.contents li.active {
	display: block;
}

ul {
	list-style-type: none;
	padding: 0; /*左にできる隙間を消す */
}
/* tab終了 */

/* カード内容についてのcss */
.wrapper {
	display: flex;
	justify-content: space-between;
    align-items: center;
    height: 40px;
    box-shadow: 0px 0px 28px 3px #ededed;
    border-radius: 20px;
    margin: 20px;
}

/* checkboxについてのcss */

* {
    box-sizing: border-box;
}

label {
    position: relative;
    width: 80px;
    height: 40px;
    background: green;
    border-radius: 20px;
}


label input {
    position: relative;
    z-index: 1;
    appearance: none;
    cursor: pointer;
}

label span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #fe0000;
    border-radius: 20px;
    transition: 0.5s;
    box-shadow: 0 15px 25px #fe000066;
}

label input:checked + span {
    background: #05be05;
    border-radius: 20px;
    box-shadow: 0 15px 25px #05be0566;
}

label span i {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 36px;
    height: 36px;
    background: #fff;
    border-radius: 50px;
    transition: 0.1s;
}

label input:checked + span i {
    Left: 42px;
    transition: 0.5s;
}

/* checkbox終了 */

p {
    display: flex;
    justify-content: center;
    align-items: center;
    font-family:  "Yu Gothic", "游ゴシック", YuGothic, "游ゴシック体";
    font-size: 22px;
    margin-right: 160px;
}

/* calculateボタンについて */
.columnButton {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 550px;
    margin-left: 174px;
}

.calculateButton {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
    margin-top: 20px;
    margin: 0 auto;
}

.button{
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    border-radius: 20px;
    width: 200px;
    height: 80px;
    box-shadow: 0px 0px 28px 3px #ededed;
    transition: 1s;
    box-shadow: 0 0 3px var(--clr),
    0 0 15px var(--clr);
    overflow: hidden;
    position: relative;
    border: none;
    outline: none;
}


.button span{
    font-family: fantasy;
    font-size: 30px;
    background: #000000;
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff8282', endColorstr='#e178ed',GradientType=1 );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.button:hover {
    background: var(--clr);
}

.button:hover::before {
    width: 120%;
}

.button::before {
    content: "";
    position: absolute;
    width: 40px;
    height: 400px;
    background: var(--clr);
    transition: 1s;
    animation: animate 2s linear infinite;
    animation-delay: calc(0.33s * var(--i));
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.button::after {
    content: "";
    position: absolute;
    inset: 5px;
    background: white;
    border-radius: 20px;
    transition: 0.5s;

}

.button:hover::after {
    background: var(--clr);

}

.button span {
    font-family: fantasy;
    color: black;
    position: relative;
    z-index: 1;
    font-size: 1.6em;
    text-transform: uppercase;
    Letter-spacing: 1px;
    transition: 0.3s;
    outline: none;
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.button {
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    border-radius: 20px;
    width: 140px;
    height: 70px;
    box-shadow: 0px 0px 28px 3px #ededed;
    transition: 1s;
    box-shadow: 0 0 3px var(--clr),
    0 0 15px var(--clr);
    overflow: hidden;
    position: relative;
    border: none;
    outline: none;
}

.button:hover {
    background: var(--clr);
}

.button:hover::before {
    width: 120%;
}

.button::before {
    content: "";
    position: absolute;
    width: 40px;
    height: 400px;
    background: var(--clr);
    transition: 1s;
    animation: animate 2s linear infinite;
    animation-delay: calc(0.33s * var(--i));
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.button::after {
    content: "";
    position: absolute;
    inset: 5px;
    background: white;
    border-radius: 20px;
    transition: 0.5s;
    outline: none;
}

.button:hover::after {
    background: var(--clr);
}

/* backNextボタンについて */
.backNextButton span {
    font-family: fantasy;
    color: black;
    position: relative;
    z-index: 1;
    font-size: 1.6em;
    text-transform: uppercase;
    Letter-spacing: 1px;
    transition: 0.3s;
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.backNextButton{
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    border-radius: 100%;
    width: 105px;
    height: 105px;
    box-shadow: 0px 0px 28px 3px #ededed;
    transition: 1s;
    box-shadow: 0 0 3px var(--clr),
    0 0 15px var(--clr);
    overflow: hidden;
    position: relative;
    border: none;
}

.backNextButton:hover {
    background: var(--clr);
}

.backNextButton:hover::before {
    width: 120%;


}

.backNextButton::before {
    content: "";
    position: absolute;
    width: 40px;
    height: 400px;
    background: var(--clr);
    transition: 1s;
    animation: animate 2s linear infinite;
    animation-delay: calc(0.33s * var(--i));
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.backNextButton::after {
    content: "";
    position: absolute;
    inset: 7px;
    background: white;
    border-radius: 100%;
    transition: 0.5s;
}

.backNextButton:hover::after {
    background: var(--clr);
}

